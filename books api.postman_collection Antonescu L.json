{
	"info": {
		"_postman_id": "89c325a6-9e02-4d39-bd51-58fc6d55c6c7",
		"name": "books api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25899535"
	},
	"item": [
		{
			"name": "access token",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"clientName\": \"ionela\",\n   \"clientEmail\": \"ionela@example.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/api-clients/",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"api-clients",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "return all books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check that the status code is correct\", function () ",
							"{ pm.response.to.have.status(200);});",
							"",
							"",
							"",
							"pm.test(\"Check that the first results in the list are correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].id).to.eql(1);",
							"    pm.expect(jsonData[0].name).to.eql(\"The Russian\");",
							"    pm.expect(jsonData[0].type).to.eql(\"fiction\");",
							"    pm.expect(jsonData[0].available).to.be.true;",
							"});",
							"",
							"pm.test(\"Check that the second resultin the list are correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[1].id).to.eql(2);",
							"    pm.expect(jsonData[1].name).to.eql(\"Just as I Am\");",
							"    pm.expect(jsonData[1].type).to.eql(\"non-fiction\");",
							"    pm.expect(jsonData[1].available).to.be.false;",
							"});",
							"",
							"",
							"",
							"",
							"",
							"var data = pm.response.json();",
							"pm.test('Number of books = ' + data.length, function () { ",
							"pm.expect(data.length).to.equal(6);});",
							"",
							"",
							"",
							"pm.test(\"Response time is less than 5s\", () => {",
							"pm.expect(pm.response.responseTime).to.be.below(5000);});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/books",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "return all books available",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.expect(book.available).to.be.true; "
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/books?available=true",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "available",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "return fiction books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"",
							"pm.test(\"Check that the first results in the list are correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].id).to.eql(1);",
							"    pm.expect(jsonData[0].name).to.eql(\"The Russian\");",
							"    pm.expect(jsonData[0].type).to.eql(\"fiction\");",
							"    pm.expect(jsonData[0].available).to.be.true;",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/books?type=fiction",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "fiction"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "return non fiction books",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/books?type=non-fiction",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "non-fiction"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "return all books limit by 0-3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Check that the status code is correct\", function () ",
							"{ pm.response.to.have.status(200);});",
							"",
							"",
							"var data = pm.response.json();",
							"pm.test('Number of books = ' + data.length, function () { ",
							"pm.expect(data.length).to.equal(3);});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/books?limit=3",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "limit",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "return all books limit by 19",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"var data = pm.response.json();",
							"pm.test('Number of books = ' + data.length, function () { ",
							"",
							"pm.expect(data.length).to.equal(6);})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/books?limit=19",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "limit",
							"value": "19"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "return a single book",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/books?name=Just as I Am",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "name",
							"value": "Just as I Am"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "return all orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Check that the first results in the list are correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData[0].id).to.eql(\"quTQMtxDo33vFM6Dq1RSn\");",
							"    pm.expect(jsonData[0].bookId).to.eql(\"3\");",
							"    pm.expect(jsonData[0].custorName).to.eql(\"marcel\");",
							"    pm.expect(jsonData[0].createdBy).to.eql (\"324539285d4f6dc9f8f856146070f2f2104e02a9c114e33f9394a465801e26c5\");",
							" pm.expect(jsonData[0].quantity).to.eql(\"1\");",
							"    pm.expect(jsonData[0].timestamp).to.eql(\"1682878647734\");",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "58095217ac94c1b5099368d212b7b711a9bb9c74f33e8a3612a184470f4cb69d",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "submit an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const raspuns = pm.response.json();",
							"    console.log(\"Afisam datele pentru comanda cu id-ul:\", raspuns[0].orderId)",
							"    console.log(\"Id-ul este:\", raspuns[V6LnMzyarO3JixYlxVsyP].orderId)",
							"    console.log(\"Book Id-ul este:\", raspuns[0].bookId)",
							"    console.log(\"CustomerName-ul este:\", raspuns[0].customerName)",
							"    console.log(\"Created by:\", raspuns[0].createdBy)",
							"    console.log(\"Cantinatea este:\", raspuns[0].quantity)",
							"    console.log(\"Timestamp-ul este:\", raspuns[0].timestamp)",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "58095217ac94c1b5099368d212b7b711a9bb9c74f33e8a3612a184470f4cb69d",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\n\n{\n  \"bookId\": 1,\n  \"customerName\": \"ionela\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "update an order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "58095217ac94c1b5099368d212b7b711a9bb9c74f33e8a3612a184470f4cb69d",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"customerName\": \"Antonescu\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders/:orderId?orderId=GbsHf2CShKUwSqRphHWtd",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders",
						":orderId"
					],
					"query": [
						{
							"key": "orderId",
							"value": "GbsHf2CShKUwSqRphHWtd"
						}
					],
					"variable": [
						{
							"key": "orderId",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "return status of the api",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/status",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "submit an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							";",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "58095217ac94c1b5099368d212b7b711a9bb9c74f33e8a3612a184470f4cb69d",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"bookId\": 3,\n  \"customerName\": \"marcel\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete an order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check that the status code of the request is the correct one\",() =>{",
							"   pm.response.to.have.status(404)})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "58095217ac94c1b5099368d212b7b711a9bb9c74f33e8a3612a184470f4cb69d",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/orders/:orderId\n\n",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"orders",
						":orderId\n\n"
					],
					"variable": [
						{
							"key": "orderId\n\n",
							"value": "quTQMtxDo33vFM6Dq1RSn"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "login with an invalid email",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"clientName\": \"Postman\",\n   \"clientEmail\": \"valentin@example.\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/api-clients/",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"api-clients",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "return all books - Filter by negative limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"",
							"pm.test(\"Response returns correct error message\", function () {",
							"var responseData = pm.response.json();",
							"book = data[0];",
							"const response = pm.response.json()",
							"{pm.expect(responseData.error).to.eql(\"Invalid value for query parameter 'limit'. Must be greater than 0.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/books?limit=-5",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "limit",
							"value": "-5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "return all books filter by invalide type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseData = pm.response.json()",
							"pm.test(\"Response returns correct error message\", function ()",
							"{pm.expect(responseData.error).to.eql(\"Invalid value for query parameter 'type'. Must be one of: fiction, non-fiction.\");});",
							"",
							"pm.test(\"Response time is less than 5s\", () => {",
							"pm.expect(pm.response.responseTime).to.be.below(5000);});",
							"",
							"",
							"pm.test(\"Check that the status code of the request is the correct one\",() =>{",
							"   pm.response.to.have.status(400)})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"followRedirects": false,
				"disableUrlEncoding": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://simple-books-api.glitch.me/books?type=abc098",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": "abc098"
						}
					]
				}
			},
			"response": []
		}
	]
}